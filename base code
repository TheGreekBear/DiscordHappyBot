import discord 
import os 
import time
import random
import json
import requests
from discord.ext import commands
import threading
import timeit

client = discord.Client()

Bank = {}
Wallet = 0
HasGun = False
Job1 = False
Job2 = False
Job3 = False


def JobSalary(*arg):
  global Bank
  print (arg)
  Bank[arg[0]][0] += arg[1]
  print('Func1', Bank)
  tTimer = threading.Timer(arg[2], JobSalary, arg)
  tTimer.start()
  Bank[arg[0]][2] = tTimer

sad_words = ["sad", "depressed", "unhappy", "angry", "miserable"]
starter_encouragements = [
  "Cheer up!",
  "Cheer up!",
  "Hang in there.",
  "Hang in there.",
  "You are a great person / bot!",
  "You are a great person / bot!",
  "Your mother loves you",
  "Your mother loves you",
  "At least one person has thought of you",
  "At least one person has thought of you",
  "Heinrich Himmler would be proud of you"

]
starter_calmers = [
  "Maintain control",
  "Getting angry is just a waste of energy",
  "Resolve the argument calmly",
  "Try to be patient",
  "Breathe slowly"
]

starter_happy = [
  "enjoy your bliss",
  "joy is ephemeral",
  "do not pursue material possesions",
  "Help others",
  "Be kind to your neighbour"
]
def get_quote():
  response = requests.get("https://zenquotes.io/api/random")
  json_data = json.loads(response.text)
  quote = json_data[0]['q'] + " -" + json_data[0]['a']
  return(quote)


async def on_message(message):
  if message.author == client.user:
    return

  msg = message.content

    
  if any(word in msg for word in sad_words):
    await message.channel.send(random.choice(starter_encouragements))



@client.event
async def on_ready():
  await client.change_presence(status=discord.Status.idle, activity = discord.Game('$help'))
  print('We have logged in as {0.user}'.format(client))

@client.event
async def on_message(message):
  if message.author.bot == True:
    return
  
  global Bank
  global HasGun 
  global Job1 
  global Job2 
  global Job3 
  global Wallet
  
  authorid = message.author.id

  if authorid not in Bank:
    Bank[authorid] = [0, False, 0, False]
    print (Bank)
  
  
  if message.content.startswith('$sad'):
    SAYOU = random.randint(1,2)
    #time.sleep(0)
    if SAYOU == (1):
      quote = get_quote()
      await message.channel.send(quote)
    else:
      await message.channel.send(random.choice(starter_encouragements))
    return
  
  if message.content.startswith('$angry'):
    await message.channel.send(random.choice(starter_calmers))
    return

  if message.content.startswith('$horny'):
    await message.channel.send('no, go play csgo, reject your horniness')
    return
  
  if message.content.startswith('$happy'):
    await message.channel.send(random.choice(starter_happy))
    return
  
  if message.content.startswith('$help'):
    await message.channel.send('type "$sad","$happy","$angry", "ʰᵒʳⁿʸ", "$buy", "$work", "$wallet" for help')
    return
  
  if message.content.startswith('$buy'):
    await message.channel.send('You can buy a coupla things, $Bgun, $Bhouse, $Blife')
    return
  
  if message.content.startswith('$Bgun'):
    if Bank[authorid][0]>100:
      Bank[authorid][3] = True
      Bank[authorid][0]-=100
      await message.channel.send('You now have a gun, try $shootgun')
    else:
      await message.channel.send('get more money laddie')
    return
  
  if message.content.startswith('$shootgun'):
    if Bank[authorid][3] == True:
      Misfire = random.randint(1,10)
      if Misfire < 9:
        await message.channel.send('BANG BANG BANG')
      else:
        await message.channel.send('The gun misfired, wat a shame')
    else:
      await message.channel.send('get a gun first u numpty')
    return

  if message.content.startswith('$work'):
    await message.channel.send('Hello, welcome to the job center, you have a choice of 3 jobs, #1 gives you 10 coins a minute, #2 gives you 25 coins every 2 minutes and #3 gives you 40 coins every 3 minutes. Now, be careful, since if you want money right now you might opt for job number 1, while job 3 gives you a nice pay but at a later time.... Choose which on you want by typing "$jobone","$jobtwo" or "$jobthree" and dont forget, once you choose a job, if you are not satisfied you can use "$LeaveJob" to leave the job')
    return

  if message.content.startswith('$LeaveJob'):
    tTimer = Bank[authorid][2]
    tTimer.cancel()
    Bank[authorid][1] = False
    await message.channel.send('You have now ceased your employment')
    return
  
  if message.content.startswith('$jobone'):
    if Bank[authorid][1] == True: 
      await message.channel.send(' You cannot apply for a job right now, this could be becuase you are already employed')
      return
    await message.channel.send('Congrats on your new job')
    tTimer = threading.Timer(9.9999999, JobSalary, [authorid, 10, 9.99999999999999])
    tTimer.start()
    Bank[authorid][1] = True
    Bank[authorid][2] = tTimer
    return

  if message.content.startswith('$jobtwo'):
    if Bank[authorid][1] == True: 
      await message.channel.send(' You cannot apply for a job right now, this could be becuase you are already employed')
      return
    await message.channel.send('Congrats on your new job')
    tTimer = threading.Timer(119.9999999, JobSalary, [authorid, 25, 119.9999999999])
    tTimer.start()
    Bank[authorid][1] = True
    Bank[authorid][2] = tTimer
    return

  if message.content.startswith('$jobthree'):
    if Bank[authorid][1] == True: 
      await message.channel.send(' You cannot apply for a job right now, this could be becuase you are already employed')
      return
    await message.channel.send('Congrats on your new job')
    tTimer = threading.Timer(179.99999999, JobSalary, [authorid, 40, 179.9999999])
    tTimer.start()
    Bank[authorid][1] = True
    Bank[authorid][2] = tTimer
    return

  if message.content.startswith('$wallet'):
    await message.channel.send('Your balance is:')
    await message.channel.send(Bank[authorid][0])

  
client.run(os.getenv('TOKEN'))
